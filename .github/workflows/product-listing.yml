name: CI/CD Pipeline - Product Listing

on:
  push:
    branches:
      - master
    paths:
      - "product-listing/**"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./product-listing
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.13
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install
      - name: Zip files and packages
        run: |
          SITE_PACKAGES=$(pipenv --venv)/lib/python3.9/site-packages
          DIR=$(pwd)/..
          mkdir -p $DIR/product-listing/python
          cd $SITE_PACKAGES
          cp -r * $DIR/product-listing/python
          cd $DIR/product-listing
          zip -FSr9 $DIR/infra/product-listing-layer.zip python
          cd $DIR/product-listing
          zip -FSr9 $DIR/infra/product-listing.zip app
      - name: Upload layer zip file artifact
        uses: actions/upload-artifact@v3
        with:
          name: product-listing-layer
          path: infra/product-listing-layer.zip
      - name: Upload function zip file artifact
        uses: actions/upload-artifact@v3
        with:
          name: product-listing
          path: infra/product-listing.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./infra
    steps:
      - uses: actions/checkout@v3
      - name: Download layer zip file artifact
        uses: actions/download-artifact@v3
        with:
          name: product-listing-layer
      - name: Download function zip file artifact
        uses: actions/download-artifact@v3
        with:
          name: product-listing
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_PRODUCT_LISTING_LAMBDA_ARN: ${{ secrets.AWS_PRODUCT_LISTING_LAMBDA_ARN }}
          AWS_PRODUCT_LISTING_TABLE_NAME: ${{ secrets.AWS_PRODUCT_LISTING_TABLE_NAME }}
        run: |
          npm install -g aws-cdk
          npm install
          cd ..
          mv -f product-listing.zip infra/product-listing.zip
          mv -f product-listing-layer.zip infra/product-listing-layer.zip
          cd infra
          aws lambda update-function-code --function-name $AWS_PRODUCT_LISTING_LAMBDA_ARN --zip-file fileb://product-listing.zip
          aws lambda publish-layer-version --layer-name product-listing --zip-file fileb://product-listing-layer.zip
          LAYER_ARN=$(aws lambda list-layer-versions --layer-name product-listing --query 'LayerVersions[0].LayerVersionArn' --output text)
          aws lambda update-function-configuration --function-name $AWS_PRODUCT_LISTING_LAMBDA_ARN --layers $LAYER_ARN --handler app.product_listing_controller.handler --environment Variables="{AWS_ACCESS_KEY_ID_LAMBDA=$AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY_LAMBDA=$AWS_SECRET_ACCESS_KEY,AWS_PRODUCT_LISTING_TABLE_NAME=$AWS_PRODUCT_LISTING_TABLE_NAME}"
